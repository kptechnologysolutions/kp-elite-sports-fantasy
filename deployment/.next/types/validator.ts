// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/coach/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/coach">> = Specific
  const handler = {} as typeof import("../../app/coach/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/redesigned/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/redesigned">> = Specific
  const handler = {} as typeof import("../../app/dashboard/redesigned/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/sleeper/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/sleeper">> = Specific
  const handler = {} as typeof import("../../app/dashboard/sleeper/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/tecmo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/tecmo">> = Specific
  const handler = {} as typeof import("../../app/dashboard/tecmo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dynasty/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dynasty">> = Specific
  const handler = {} as typeof import("../../app/dynasty/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/gameday/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/gameday">> = Specific
  const handler = {} as typeof import("../../app/gameday/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/matchup/[teamId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/matchup/[teamId]">> = Specific
  const handler = {} as typeof import("../../app/matchup/[teamId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/matchups/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/matchups">> = Specific
  const handler = {} as typeof import("../../app/matchups/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/players/[playerId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/players/[playerId]">> = Specific
  const handler = {} as typeof import("../../app/players/[playerId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/players/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/players">> = Specific
  const handler = {} as typeof import("../../app/players/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/portfolio/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/portfolio">> = Specific
  const handler = {} as typeof import("../../app/portfolio/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/roster/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/roster">> = Specific
  const handler = {} as typeof import("../../app/roster/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/roster/sleeper/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/roster/sleeper">> = Specific
  const handler = {} as typeof import("../../app/roster/sleeper/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/scores/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/scores">> = Specific
  const handler = {} as typeof import("../../app/scores/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/stats/sleeper/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/stats/sleeper">> = Specific
  const handler = {} as typeof import("../../app/stats/sleeper/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/team-import/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/team-import">> = Specific
  const handler = {} as typeof import("../../app/team-import/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/teams/import/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teams/import">> = Specific
  const handler = {} as typeof import("../../app/teams/import/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/teams/import/yahoo/select/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teams/import/yahoo/select">> = Specific
  const handler = {} as typeof import("../../app/teams/import/yahoo/select/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/teams/import/yahoo/setup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teams/import/yahoo/setup">> = Specific
  const handler = {} as typeof import("../../app/teams/import/yahoo/setup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/teams/manage/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teams/manage">> = Specific
  const handler = {} as typeof import("../../app/teams/manage/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/teams/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teams">> = Specific
  const handler = {} as typeof import("../../app/teams/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/trade-center/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/trade-center">> = Specific
  const handler = {} as typeof import("../../app/trade-center/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/trades/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/trades">> = Specific
  const handler = {} as typeof import("../../app/trades/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/trades/sleeper/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/trades/sleeper">> = Specific
  const handler = {} as typeof import("../../app/trades/sleeper/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/waiver-wire/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/waiver-wire">> = Specific
  const handler = {} as typeof import("../../app/waiver-wire/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/waivers/sleeper/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/waivers/sleeper">> = Specific
  const handler = {} as typeof import("../../app/waivers/sleeper/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ai/lineup-recommendations/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ai/lineup-recommendations">> = Specific
  const handler = {} as typeof import("../../app/api/ai/lineup-recommendations/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/[platform]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[platform]">> = Specific
  const handler = {} as typeof import("../../app/api/auth/[platform]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/yahoo/callback/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/yahoo/callback">> = Specific
  const handler = {} as typeof import("../../app/api/auth/yahoo/callback/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/yahoo/leagues/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/yahoo/leagues">> = Specific
  const handler = {} as typeof import("../../app/api/auth/yahoo/leagues/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/yahoo/team/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/yahoo/team">> = Specific
  const handler = {} as typeof import("../../app/api/auth/yahoo/team/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/gameday/live/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/gameday/live">> = Specific
  const handler = {} as typeof import("../../app/api/gameday/live/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/import/csv/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/import/csv">> = Specific
  const handler = {} as typeof import("../../app/api/import/csv/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/import/sleeper/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/import/sleeper">> = Specific
  const handler = {} as typeof import("../../app/api/import/sleeper/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/live/stream/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/live/stream">> = Specific
  const handler = {} as typeof import("../../app/api/live/stream/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/news/espn/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/news/espn">> = Specific
  const handler = {} as typeof import("../../app/api/news/espn/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/news/general/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/news/general">> = Specific
  const handler = {} as typeof import("../../app/api/news/general/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/news/yahoo/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/news/yahoo">> = Specific
  const handler = {} as typeof import("../../app/api/news/yahoo/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/players/[playerId]/insights/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/players/[playerId]/insights">> = Specific
  const handler = {} as typeof import("../../app/api/players/[playerId]/insights/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/players/[playerId]/news/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/players/[playerId]/news">> = Specific
  const handler = {} as typeof import("../../app/api/players/[playerId]/news/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/players/[playerId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/players/[playerId]">> = Specific
  const handler = {} as typeof import("../../app/api/players/[playerId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/rosters/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/rosters">> = Specific
  const handler = {} as typeof import("../../app/api/rosters/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/teams/[teamId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/teams/[teamId]">> = Specific
  const handler = {} as typeof import("../../app/api/teams/[teamId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/teams/import/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/teams/import">> = Specific
  const handler = {} as typeof import("../../app/api/teams/import/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/teams/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/teams">> = Specific
  const handler = {} as typeof import("../../app/api/teams/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/test-sleeper/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test-sleeper">> = Specific
  const handler = {} as typeof import("../../app/api/test-sleeper/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
