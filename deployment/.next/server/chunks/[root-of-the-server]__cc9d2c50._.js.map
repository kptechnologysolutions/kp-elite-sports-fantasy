{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/app/api/gameday/live/route.ts","turbopack:///[project]/lib/services/gamedayService.ts"],"sourcesContent":["import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/gameday/live/route\",\n        pathname: \"/api/gameday/live\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/app/api/gameday/live/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/gameday/live/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest } from 'next/server';\nimport { \n  generateGameDayData, \n  formatRedZoneAlert, \n  formatWinProbability, \n  formatPlayerInactive, \n  formatAntiCorrelation, \n  formatExposureRisk, \n  formatLiveUpdate \n} from '@/lib/services/gamedayService';\n\nexport async function GET(req: NextRequest) {\n  try {\n    const data = await generateGameDayData();\n    \n    // Format the data for display\n    const formattedData = {\n      redzone: data.redzone.map(formatRedZoneAlert),\n      winProb: data.winProb.map(formatWinProbability),\n      inactives: data.inactives.map(formatPlayerInactive),\n      antiCorr: data.antiCorr.map(formatAntiCorrelation),\n      exposure: data.exposure.map(formatExposureRisk),\n      updates: data.updates.map(formatLiveUpdate).slice(0, 10) // Show last 10 updates\n    };\n\n    return Response.json(formattedData);\n  } catch (error) {\n    console.error('Gameday API error:', error);\n    return Response.json({ \n      error: 'Failed to fetch game day data',\n      redzone: [],\n      winProb: [],\n      inactives: [],\n      antiCorr: [],\n      exposure: [],\n      updates: []\n    }, { status: 500 });\n  }\n}","// Game Day Live Data Service\nexport interface GameDayData {\n  redzone: RedZoneAlert[];\n  winProb: WinProbability[];\n  inactives: PlayerInactive[];\n  antiCorr: AntiCorrelation[];\n  exposure: ExposureRisk[];\n  updates: LiveUpdate[];\n}\n\nexport interface RedZoneAlert {\n  player: string;\n  team: string;\n  game: string;\n  time: string;\n  priority: 'high' | 'medium' | 'low';\n}\n\nexport interface WinProbability {\n  game: string;\n  team: string;\n  probability: number;\n  trend: 'up' | 'down' | 'stable';\n  lastUpdate: string;\n}\n\nexport interface PlayerInactive {\n  player: string;\n  team: string;\n  status: 'inactive' | 'questionable' | 'doubtful' | 'out';\n  reason: string;\n  fantasyImpact: 'high' | 'medium' | 'low';\n}\n\nexport interface AntiCorrelation {\n  players: string[];\n  recommendation: string;\n  risk: number;\n}\n\nexport interface ExposureRisk {\n  player: string;\n  exposure: number;\n  recommendation: string;\n  risk: 'high' | 'medium' | 'low';\n}\n\nexport interface LiveUpdate {\n  timestamp: string;\n  type: 'score' | 'injury' | 'redzone' | 'win_prob' | 'lineup';\n  message: string;\n  priority: 'high' | 'medium' | 'low';\n}\n\n// Generate live data from user's actual Sleeper teams and players\nexport async function generateGameDayData(userState?: any): Promise<GameDayData> {\n  const currentTime = new Date().toLocaleTimeString();\n  \n  try {\n    // If we have user state passed from client, use real data\n    if (userState && userState.user && userState.players && userState.players.size > 0) {\n      console.log('Using real user data for Game Day');\n      return generateRealGameDayData(userState, currentTime);\n    }\n    \n    // Server-side fallback\n    console.log('Using fallback data for Game Day');\n    return getFallbackGameDayData();\n  } catch (error) {\n    console.error('Error generating live game day data:', error);\n    return getFallbackGameDayData();\n  }\n}\n\n// Generate real data when we have user state\nasync function generateRealGameDayData(userState: any, currentTime: string): Promise<GameDayData> {\n  const myPlayers = userState.myRoster?.players || [];\n  const userPlayers = myPlayers.map((id: string) => userState.players.get(id)).filter(Boolean);\n  \n  console.log(`Processing ${userPlayers.length} players for real data`);\n  \n  // Get injured players\n  const injuredPlayers = userPlayers\n    .filter((player: any) => player.injury_status && player.injury_status !== 'Healthy')\n    .map((player: any) => ({\n      player: player.full_name,\n      team: player.team || 'FA',\n      status: mapInjuryStatus(player.injury_status),\n      reason: player.injury_notes || `${player.injury_status} - Monitor status`,\n      fantasyImpact: getFantasyImpact(player.position)\n    }));\n\n  // Get team correlations\n  const correlations = getTeamCorrelations(userPlayers);\n  \n  // Get exposure data\n  const exposureData = calculatePlayerExposure(userPlayers, userState.leagues);\n  \n  // Mock live scoring for now\n  const liveScoring = userPlayers.slice(0, 10).map((player: any) => ({\n    player,\n    currentPoints: Math.floor(Math.random() * 25),\n    projectedPoints: Math.floor(Math.random() * 20) + 5,\n    gameStatus: ['pre', 'live', 'final'][Math.floor(Math.random() * 3)] as any,\n    lastUpdate: currentTime\n  }));\n\n  // Generate red zone alerts\n  const redzone = liveScoring\n    .filter((score: any) => score.gameStatus === 'live')\n    .slice(0, 3)\n    .map((score: any) => ({\n      player: score.player.full_name,\n      team: score.player.team || 'FA',\n      game: `${score.player.team} vs Opponent`,\n      time: currentTime,\n      priority: ['QB', 'RB'].includes(score.player.position) ? 'high' : 'medium' as const\n    }));\n\n  // Add fallback if no live players\n  if (redzone.length === 0) {\n    redzone.push({\n      player: userPlayers[0]?.full_name || \"Your top player\",\n      team: userPlayers[0]?.team || \"TBD\",\n      game: \"Check back during game time\",\n      time: currentTime,\n      priority: 'medium'\n    });\n  }\n\n  // Generate win probabilities\n  const teams = [...new Set(userPlayers.map((p: any) => p.team).filter(Boolean))];\n  const winProb = teams.slice(0, 3).map((team: any) => ({\n    game: `${team} vs Opponent`,\n    team: team!,\n    probability: Math.floor(Math.random() * 40) + 30,\n    trend: ['up', 'down', 'stable'][Math.floor(Math.random() * 3)] as any,\n    lastUpdate: currentTime\n  }));\n\n  if (winProb.length === 0) {\n    winProb.push({\n      game: \"Your team's next game\",\n      team: userPlayers[0]?.team || \"TBD\",\n      probability: 50,\n      trend: 'stable',\n      lastUpdate: currentTime\n    });\n  }\n\n  // Generate updates\n  const updates: LiveUpdate[] = [];\n  \n  if (injuredPlayers.length > 0) {\n    updates.push({\n      timestamp: new Date(Date.now() - 300000).toLocaleTimeString(),\n      type: 'injury',\n      message: `⚠️ ${injuredPlayers[0].player} - ${injuredPlayers[0].reason}`,\n      priority: 'medium'\n    });\n  }\n\n  updates.push({\n    timestamp: currentTime,\n    type: 'lineup',\n    message: `📋 Your roster has ${userPlayers.length} active players`,\n    priority: 'medium'\n  });\n\n  return {\n    redzone,\n    winProb,\n    inactives: injuredPlayers,\n    antiCorr: correlations,\n    exposure: exposureData,\n    updates\n  };\n}\n\n// Helper functions\nfunction mapInjuryStatus(status: string | null): 'inactive' | 'questionable' | 'doubtful' | 'out' {\n  if (!status) return 'questionable';\n  const s = status.toLowerCase();\n  if (s.includes('out') || s.includes('ir')) return 'out';\n  if (s.includes('doubtful')) return 'doubtful';\n  if (s.includes('questionable')) return 'questionable';\n  return 'questionable';\n}\n\nfunction getFantasyImpact(position: string): 'high' | 'medium' | 'low' {\n  if (['QB', 'RB'].includes(position)) return 'high';\n  if (['WR', 'TE'].includes(position)) return 'medium';\n  return 'low';\n}\n\nfunction getTeamCorrelations(players: any[]): AntiCorrelation[] {\n  const byTeam: { [team: string]: any[] } = {};\n  \n  players.forEach(player => {\n    if (player.team) {\n      if (!byTeam[player.team]) byTeam[player.team] = [];\n      byTeam[player.team].push(player);\n    }\n  });\n  \n  const correlations: AntiCorrelation[] = [];\n  \n  Object.entries(byTeam).forEach(([team, teamPlayers]) => {\n    if (teamPlayers.length >= 2) {\n      const qb = teamPlayers.find(p => p.position === 'QB');\n      const skillPlayers = teamPlayers.filter(p => ['RB', 'WR', 'TE'].includes(p.position));\n      \n      if (qb && skillPlayers.length > 0) {\n        skillPlayers.forEach(skill => {\n          correlations.push({\n            players: [qb.full_name, skill.full_name],\n            recommendation: `${team} offensive stack - monitor game script`,\n            risk: 0.7\n          });\n        });\n      }\n    }\n  });\n  \n  return correlations.slice(0, 3);\n}\n\nfunction calculatePlayerExposure(players: any[], leagues: any[]): ExposureRisk[] {\n  const playerCount: { [playerId: string]: { player: any; count: number } } = {};\n  \n  players.forEach(player => {\n    if (!playerCount[player.player_id]) {\n      playerCount[player.player_id] = { player, count: 0 };\n    }\n    playerCount[player.player_id].count++;\n  });\n  \n  const totalLeagues = Math.max(leagues.length, 1);\n  \n  const exposureData = Object.values(playerCount)\n    .map(({ player, count }) => {\n      const exposure = (count / totalLeagues) * 100;\n      return {\n        player: player.full_name,\n        exposure: Math.round(exposure),\n        recommendation: getExposureRecommendation(exposure),\n        risk: exposure > 75 ? 'high' : exposure > 50 ? 'medium' : 'low'\n      };\n    })\n    .filter(exp => exp.exposure > 20)\n    .sort((a, b) => b.exposure - a.exposure);\n\n  if (exposureData.length === 0) {\n    exposureData.push({\n      player: \"Exposure analysis\",\n      exposure: 0,\n      recommendation: \"Your portfolio looks diversified\",\n      risk: 'low'\n    });\n  }\n\n  return exposureData;\n}\n\nfunction getExposureRecommendation(exposure: number): string {\n  if (exposure > 75) return \"Very high exposure - consider diversifying\";\n  if (exposure > 50) return \"High exposure - monitor closely\";\n  if (exposure > 25) return \"Moderate exposure\";\n  return \"Low exposure\";\n}\n\n// Fallback function for when real data isn't available\nfunction getFallbackGameDayData(): GameDayData {\n  const currentTime = new Date().toLocaleTimeString();\n  \n  return {\n    redzone: [{\n      player: \"Login to see your players\",\n      team: \"---\",\n      game: \"Connect account for live data\",\n      time: currentTime,\n      priority: 'medium'\n    }],\n    winProb: [{\n      game: \"Your Teams vs Opposition\",\n      team: \"Login\",\n      probability: 50,\n      trend: 'stable',\n      lastUpdate: currentTime\n    }],\n    inactives: [{\n      player: \"Login to see injury reports\",\n      team: \"---\",\n      status: 'questionable',\n      reason: \"Connect your Sleeper account to view real player injury status\",\n      fantasyImpact: 'medium'\n    }],\n    antiCorr: [{\n      players: [\"Connect\", \"Account\"],\n      recommendation: \"Login to see your team correlations and stacks\",\n      risk: 0.5\n    }],\n    exposure: [{\n      player: \"Login Required\",\n      exposure: 0,\n      recommendation: \"Connect to see player exposure across leagues\",\n      risk: 'low'\n    }],\n    updates: [{\n      timestamp: currentTime,\n      type: 'lineup',\n      message: \"📡 Connect your Sleeper account to view live player data and updates\",\n      priority: 'high'\n    }]\n  };\n}\n\n// Format data for display\nexport function formatRedZoneAlert(alert: RedZoneAlert): string {\n  return `🚨 ${alert.player} (${alert.team}) - ${alert.game} at ${alert.time}`;\n}\n\nexport function formatWinProbability(winProb: WinProbability): string {\n  const trend = winProb.trend === 'up' ? '📈' : winProb.trend === 'down' ? '📉' : '➡️';\n  return `${trend} ${winProb.team} ${winProb.probability}% (${winProb.game})`;\n}\n\nexport function formatPlayerInactive(inactive: PlayerInactive): string {\n  const statusEmoji = {\n    'inactive': '❌',\n    'questionable': '❓', \n    'doubtful': '⚠️',\n    'out': '🚫'\n  };\n  return `${statusEmoji[inactive.status]} ${inactive.player} (${inactive.team}) - ${inactive.reason}`;\n}\n\nexport function formatAntiCorrelation(antiCorr: AntiCorrelation): string {\n  return `⚖️ ${antiCorr.players.join(' + ')} - ${antiCorr.recommendation}`;\n}\n\nexport function formatExposureRisk(exposure: ExposureRisk): string {\n  const riskEmoji = { 'high': '🔴', 'medium': '🟡', 'low': '🟢' };\n  return `${riskEmoji[exposure.risk]} ${exposure.player} (${exposure.exposure}%) - ${exposure.recommendation}`;\n}\n\nexport function formatLiveUpdate(update: LiveUpdate): string {\n  return `[${update.timestamp}] ${update.message}`;\n}"],"names":[],"mappings":"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","ignoreList":[0]}