module.exports=[65533,a=>{"use strict";a.s(["EnhancedSleeperAPI",()=>d,"enhancedSleeperAPI",()=>e]);let b="https://api.sleeper.app/v1",c="2025";class d{playersCache={};nflState=null;async getNFLState(){if(!this.nflState){let a=await fetch(`${b}/state/nfl`);this.nflState=await a.json()}return this.nflState}async getAllPlayers(){if(0===Object.keys(this.playersCache).length){let a=await fetch(`${b}/players/nfl`);this.playersCache=await a.json()}return this.playersCache}async getUser(a){let c=await fetch(`${b}/user/${a}`);return c.ok?c.json():null}async getUserLeagues(a){return(await fetch(`${b}/user/${a}/leagues/nfl/${c}`)).json()}async getCompleteTeamData(a,d){try{let[e,f,g,h,i,j]=await Promise.all([this.getUser(a),fetch(`${b}/league/${d}`).then(a=>a.json()),fetch(`${b}/league/${d}/rosters`).then(a=>a.json()),fetch(`${b}/league/${d}/users`).then(a=>a.json()),this.getNFLState(),this.getAllPlayers()]);if(!e)throw Error("User not found");let k=g.find(a=>a.owner_id===e.user_id||a.co_owners?.includes(e.user_id));if(!k)throw Error("Roster not found");let l=h.find(a=>a.user_id===e.user_id),m=l?.metadata?.team_name||l?.display_name||a,n=(()=>{let a=new Date("2025-09-04");return Math.min(18,Math.max(1,Math.floor(Math.floor((new Date().getTime()-a.getTime())/864e5)/7)+1))})(),o=await fetch(`${b}/league/${d}/matchups/${n}`),p=await o.json(),q=p.find(a=>a.roster_id===k.roster_id),r=null;if(q){let a=p.find(a=>a.matchup_id===q.matchup_id&&a.roster_id!==k.roster_id);if(a){let b=g.find(b=>b.roster_id===a.roster_id),c=h.find(a=>a.user_id===b?.owner_id),d=c?.metadata?.team_name||c?.display_name||"Unknown";r={week:n,teamScore:q.points||0,opponentScore:a.points||0,opponentName:d,matchupId:q.matchup_id,starters:q.starters||[],startersPoints:q.starters_points||[]}}}let s=[];if(k.players&&Array.isArray(k.players))for(let a of k.players){let b=j[a],d=q?.starters?.includes(a),e=d?q.starters.indexOf(a):-1,f=e>=0&&q?.starters_points?.[e]?q.starters_points[e]:0,g={id:a,name:b?`${b.first_name} ${b.last_name}`:`Player ${a}`,position:b?.position||"Unknown",team:b?.team||"FA",jerseyNumber:parseInt(b?.number)||0,status:{isActive:d||!1,gameStatus:b?.injury_status||"healthy",lastUpdated:new Date},stats:{season:parseInt(c),week:n,fantasyPoints:f,projectedPoints:0}};b?.injury_status&&(g.injuryStatus={type:b.injury_status,description:b.injury_notes||b.injury_status,severity:"unknown",practiceStatus:b.practice_participation||"unknown"}),s.push(g)}return{league:{id:f.league_id,name:f.name,size:f.total_rosters,scoringType:f.scoring_settings?.rec?"PPR":"Standard",season:f.season,status:f.status},team:{id:k.roster_id,name:m,owner:l?.display_name||a},roster:k,record:{wins:k.settings?.wins||0,losses:k.settings?.losses||0,ties:k.settings?.ties||0,pointsFor:k.settings?.fpts||0,pointsAgainst:k.settings?.fpts_against||0,rank:k.settings?.rank||0},matchup:r,players:s,currentWeek:n,metadata:{lastUpdate:new Date,source:"sleeper",userId:e.user_id}}}catch(a){throw console.error("Error fetching complete team data:",a),a}}async getAllUserTeams(a){try{let b=await this.getUser(a);if(!b)throw Error("User not found");let c=await this.getUserLeagues(b.user_id),d=[];for(let b of c)try{let c=await this.getCompleteTeamData(a,b.league_id);d.push(c)}catch(a){console.error(`Failed to import league ${b.name}:`,a)}return d}catch(a){throw console.error("Error fetching all teams:",a),a}}}let e=new d}];

//# sourceMappingURL=lib_api_sleeper-enhanced_ts_d18650e3._.js.map