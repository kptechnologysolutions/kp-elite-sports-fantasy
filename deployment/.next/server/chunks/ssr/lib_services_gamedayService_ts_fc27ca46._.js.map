{"version":3,"sources":["turbopack:///[project]/lib/services/gamedayService.ts"],"sourcesContent":["// Game Day Live Data Service\nexport interface GameDayData {\n  redzone: RedZoneAlert[];\n  winProb: WinProbability[];\n  inactives: PlayerInactive[];\n  antiCorr: AntiCorrelation[];\n  exposure: ExposureRisk[];\n  updates: LiveUpdate[];\n}\n\nexport interface RedZoneAlert {\n  player: string;\n  team: string;\n  game: string;\n  time: string;\n  priority: 'high' | 'medium' | 'low';\n}\n\nexport interface WinProbability {\n  game: string;\n  team: string;\n  probability: number;\n  trend: 'up' | 'down' | 'stable';\n  lastUpdate: string;\n}\n\nexport interface PlayerInactive {\n  player: string;\n  team: string;\n  status: 'inactive' | 'questionable' | 'doubtful' | 'out';\n  reason: string;\n  fantasyImpact: 'high' | 'medium' | 'low';\n}\n\nexport interface AntiCorrelation {\n  players: string[];\n  recommendation: string;\n  risk: number;\n}\n\nexport interface ExposureRisk {\n  player: string;\n  exposure: number;\n  recommendation: string;\n  risk: 'high' | 'medium' | 'low';\n}\n\nexport interface LiveUpdate {\n  timestamp: string;\n  type: 'score' | 'injury' | 'redzone' | 'win_prob' | 'lineup';\n  message: string;\n  priority: 'high' | 'medium' | 'low';\n}\n\n// Generate live data from user's actual Sleeper teams and players\nexport async function generateGameDayData(userState?: any): Promise<GameDayData> {\n  const currentTime = new Date().toLocaleTimeString();\n  \n  try {\n    // If we have user state passed from client, use real data\n    if (userState && userState.user && userState.players && userState.players.size > 0) {\n      console.log('Using real user data for Game Day');\n      return generateRealGameDayData(userState, currentTime);\n    }\n    \n    // Server-side fallback\n    console.log('Using fallback data for Game Day');\n    return getFallbackGameDayData();\n  } catch (error) {\n    console.error('Error generating live game day data:', error);\n    return getFallbackGameDayData();\n  }\n}\n\n// Generate real data when we have user state\nasync function generateRealGameDayData(userState: any, currentTime: string): Promise<GameDayData> {\n  const myPlayers = userState.myRoster?.players || [];\n  const userPlayers = myPlayers.map((id: string) => userState.players.get(id)).filter(Boolean);\n  \n  console.log(`Processing ${userPlayers.length} players for real data`);\n  \n  // Get injured players\n  const injuredPlayers = userPlayers\n    .filter((player: any) => player.injury_status && player.injury_status !== 'Healthy')\n    .map((player: any) => ({\n      player: player.full_name,\n      team: player.team || 'FA',\n      status: mapInjuryStatus(player.injury_status),\n      reason: player.injury_notes || `${player.injury_status} - Monitor status`,\n      fantasyImpact: getFantasyImpact(player.position)\n    }));\n\n  // Get team correlations\n  const correlations = getTeamCorrelations(userPlayers);\n  \n  // Get exposure data\n  const exposureData = calculatePlayerExposure(userPlayers, userState.leagues);\n  \n  // Mock live scoring for now\n  const liveScoring = userPlayers.slice(0, 10).map((player: any) => ({\n    player,\n    currentPoints: Math.floor(Math.random() * 25),\n    projectedPoints: Math.floor(Math.random() * 20) + 5,\n    gameStatus: ['pre', 'live', 'final'][Math.floor(Math.random() * 3)] as any,\n    lastUpdate: currentTime\n  }));\n\n  // Generate red zone alerts\n  const redzone = liveScoring\n    .filter((score: any) => score.gameStatus === 'live')\n    .slice(0, 3)\n    .map((score: any) => ({\n      player: score.player.full_name,\n      team: score.player.team || 'FA',\n      game: `${score.player.team} vs Opponent`,\n      time: currentTime,\n      priority: ['QB', 'RB'].includes(score.player.position) ? 'high' : 'medium' as const\n    }));\n\n  // Add fallback if no live players\n  if (redzone.length === 0) {\n    redzone.push({\n      player: userPlayers[0]?.full_name || \"Your top player\",\n      team: userPlayers[0]?.team || \"TBD\",\n      game: \"Check back during game time\",\n      time: currentTime,\n      priority: 'medium'\n    });\n  }\n\n  // Generate win probabilities\n  const teams = [...new Set(userPlayers.map((p: any) => p.team).filter(Boolean))];\n  const winProb = teams.slice(0, 3).map((team: any) => ({\n    game: `${team} vs Opponent`,\n    team: team!,\n    probability: Math.floor(Math.random() * 40) + 30,\n    trend: ['up', 'down', 'stable'][Math.floor(Math.random() * 3)] as any,\n    lastUpdate: currentTime\n  }));\n\n  if (winProb.length === 0) {\n    winProb.push({\n      game: \"Your team's next game\",\n      team: userPlayers[0]?.team || \"TBD\",\n      probability: 50,\n      trend: 'stable',\n      lastUpdate: currentTime\n    });\n  }\n\n  // Generate updates\n  const updates: LiveUpdate[] = [];\n  \n  if (injuredPlayers.length > 0) {\n    updates.push({\n      timestamp: new Date(Date.now() - 300000).toLocaleTimeString(),\n      type: 'injury',\n      message: `⚠️ ${injuredPlayers[0].player} - ${injuredPlayers[0].reason}`,\n      priority: 'medium'\n    });\n  }\n\n  updates.push({\n    timestamp: currentTime,\n    type: 'lineup',\n    message: `📋 Your roster has ${userPlayers.length} active players`,\n    priority: 'medium'\n  });\n\n  return {\n    redzone,\n    winProb,\n    inactives: injuredPlayers,\n    antiCorr: correlations,\n    exposure: exposureData,\n    updates\n  };\n}\n\n// Helper functions\nfunction mapInjuryStatus(status: string | null): 'inactive' | 'questionable' | 'doubtful' | 'out' {\n  if (!status) return 'questionable';\n  const s = status.toLowerCase();\n  if (s.includes('out') || s.includes('ir')) return 'out';\n  if (s.includes('doubtful')) return 'doubtful';\n  if (s.includes('questionable')) return 'questionable';\n  return 'questionable';\n}\n\nfunction getFantasyImpact(position: string): 'high' | 'medium' | 'low' {\n  if (['QB', 'RB'].includes(position)) return 'high';\n  if (['WR', 'TE'].includes(position)) return 'medium';\n  return 'low';\n}\n\nfunction getTeamCorrelations(players: any[]): AntiCorrelation[] {\n  const byTeam: { [team: string]: any[] } = {};\n  \n  players.forEach(player => {\n    if (player.team) {\n      if (!byTeam[player.team]) byTeam[player.team] = [];\n      byTeam[player.team].push(player);\n    }\n  });\n  \n  const correlations: AntiCorrelation[] = [];\n  \n  Object.entries(byTeam).forEach(([team, teamPlayers]) => {\n    if (teamPlayers.length >= 2) {\n      const qb = teamPlayers.find(p => p.position === 'QB');\n      const skillPlayers = teamPlayers.filter(p => ['RB', 'WR', 'TE'].includes(p.position));\n      \n      if (qb && skillPlayers.length > 0) {\n        skillPlayers.forEach(skill => {\n          correlations.push({\n            players: [qb.full_name, skill.full_name],\n            recommendation: `${team} offensive stack - monitor game script`,\n            risk: 0.7\n          });\n        });\n      }\n    }\n  });\n  \n  return correlations.slice(0, 3);\n}\n\nfunction calculatePlayerExposure(players: any[], leagues: any[]): ExposureRisk[] {\n  const playerCount: { [playerId: string]: { player: any; count: number } } = {};\n  \n  players.forEach(player => {\n    if (!playerCount[player.player_id]) {\n      playerCount[player.player_id] = { player, count: 0 };\n    }\n    playerCount[player.player_id].count++;\n  });\n  \n  const totalLeagues = Math.max(leagues.length, 1);\n  \n  const exposureData = Object.values(playerCount)\n    .map(({ player, count }) => {\n      const exposure = (count / totalLeagues) * 100;\n      return {\n        player: player.full_name,\n        exposure: Math.round(exposure),\n        recommendation: getExposureRecommendation(exposure),\n        risk: exposure > 75 ? 'high' : exposure > 50 ? 'medium' : 'low'\n      };\n    })\n    .filter(exp => exp.exposure > 20)\n    .sort((a, b) => b.exposure - a.exposure);\n\n  if (exposureData.length === 0) {\n    exposureData.push({\n      player: \"Exposure analysis\",\n      exposure: 0,\n      recommendation: \"Your portfolio looks diversified\",\n      risk: 'low'\n    });\n  }\n\n  return exposureData;\n}\n\nfunction getExposureRecommendation(exposure: number): string {\n  if (exposure > 75) return \"Very high exposure - consider diversifying\";\n  if (exposure > 50) return \"High exposure - monitor closely\";\n  if (exposure > 25) return \"Moderate exposure\";\n  return \"Low exposure\";\n}\n\n// Fallback function for when real data isn't available\nfunction getFallbackGameDayData(): GameDayData {\n  const currentTime = new Date().toLocaleTimeString();\n  \n  return {\n    redzone: [{\n      player: \"Login to see your players\",\n      team: \"---\",\n      game: \"Connect account for live data\",\n      time: currentTime,\n      priority: 'medium'\n    }],\n    winProb: [{\n      game: \"Your Teams vs Opposition\",\n      team: \"Login\",\n      probability: 50,\n      trend: 'stable',\n      lastUpdate: currentTime\n    }],\n    inactives: [{\n      player: \"Login to see injury reports\",\n      team: \"---\",\n      status: 'questionable',\n      reason: \"Connect your Sleeper account to view real player injury status\",\n      fantasyImpact: 'medium'\n    }],\n    antiCorr: [{\n      players: [\"Connect\", \"Account\"],\n      recommendation: \"Login to see your team correlations and stacks\",\n      risk: 0.5\n    }],\n    exposure: [{\n      player: \"Login Required\",\n      exposure: 0,\n      recommendation: \"Connect to see player exposure across leagues\",\n      risk: 'low'\n    }],\n    updates: [{\n      timestamp: currentTime,\n      type: 'lineup',\n      message: \"📡 Connect your Sleeper account to view live player data and updates\",\n      priority: 'high'\n    }]\n  };\n}\n\n// Format data for display\nexport function formatRedZoneAlert(alert: RedZoneAlert): string {\n  return `🚨 ${alert.player} (${alert.team}) - ${alert.game} at ${alert.time}`;\n}\n\nexport function formatWinProbability(winProb: WinProbability): string {\n  const trend = winProb.trend === 'up' ? '📈' : winProb.trend === 'down' ? '📉' : '➡️';\n  return `${trend} ${winProb.team} ${winProb.probability}% (${winProb.game})`;\n}\n\nexport function formatPlayerInactive(inactive: PlayerInactive): string {\n  const statusEmoji = {\n    'inactive': '❌',\n    'questionable': '❓', \n    'doubtful': '⚠️',\n    'out': '🚫'\n  };\n  return `${statusEmoji[inactive.status]} ${inactive.player} (${inactive.team}) - ${inactive.reason}`;\n}\n\nexport function formatAntiCorrelation(antiCorr: AntiCorrelation): string {\n  return `⚖️ ${antiCorr.players.join(' + ')} - ${antiCorr.recommendation}`;\n}\n\nexport function formatExposureRisk(exposure: ExposureRisk): string {\n  const riskEmoji = { 'high': '🔴', 'medium': '🟡', 'low': '🟢' };\n  return `${riskEmoji[exposure.risk]} ${exposure.player} (${exposure.exposure}%) - ${exposure.recommendation}`;\n}\n\nexport function formatLiveUpdate(update: LiveUpdate): string {\n  return `[${update.timestamp}] ${update.message}`;\n}"],"names":[],"mappings":"uCAuDO,eAAe,EAAoB,CAAe,EACvD,IAAM,EAAc,IAAI,OAAO,kBAAkB,GAEjD,GAAI,CAEF,GAAI,GAAa,EAAU,IAAI,EAAI,EAAU,OAAO,EAAI,EAAU,OAAO,CAAC,IAAI,CAAG,EAE/E,CAFkF,MAClF,QAAQ,GAAG,CAAC,qCACL,EAAwB,EAAW,GAK5C,OADA,QAAQ,GAAG,CAAC,oCACL,GACT,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,uCAAwC,GAC/C,GACT,CACF,CAGA,eAAe,EAAwB,CAAc,CAAE,CAAmB,EAExE,IAAM,EAAc,CADF,EAAU,QAAQ,EAAE,SAAW,EAAA,AAAE,EACrB,GAAG,CAAC,AAAC,GAAe,EAAU,OAAO,CAAC,GAAG,CAAC,IAAK,MAAM,CAAC,SAEpF,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,EAAY,MAAM,CAAC,sBAAsB,CAAC,EAGpE,IAAM,EAAiB,EACpB,MAAM,CAAC,AAAC,GAAgB,EAAO,aAAa,EAA6B,YAAzB,EAAO,aAAa,EACpE,GAAG,CAAC,AAAC,QAyGgB,CAzGA,OAAC,AAyGe,CAxGpC,OAAQ,EAAO,SAAS,CACxB,KAAM,EAAO,IAAI,EAAI,KACrB,OAAQ,AA6Fd,SAAS,AAAgB,CAAqB,EAC5C,GAAI,CAAC,EAAQ,MAAO,eACpB,IAAM,EAAI,EAAO,WAAW,UAC5B,AAAI,EAAE,QAAQ,CAAC,QAAU,EAAE,QAAQ,CAAC,MAAc,CAAP,KACvC,EAAE,QAAQ,CAAC,YAAoB,CAAP,WACxB,EAAE,QAAQ,CAAC,gBACR,CADyB,OAAO,OAEzC,EApG8B,EAAO,aAAa,EAC5C,OAAQ,EAAO,YAAY,EAAI,CAAA,EAAG,EAAO,aAAa,CAAC,iBAAiB,CAAC,CACzE,cAqGJ,AAAI,CArGe,AAqGd,KAAM,KAAK,CAAC,QAAQ,CAAC,EArGU,EAAO,OAqGN,CArGc,EAqGP,OACxC,CAAC,KAAM,KAAK,CAAC,QAAQ,CAAC,GAAkB,QAAP,CAC9B,KAtGL,CAAC,GAGG,EAsGR,AAtGuB,SAsGd,AAAoB,CAAc,EACzC,IAAM,EAAoC,CAAC,EAE3C,EAAQ,OAAO,CAAC,IACV,EAAO,IAAI,EAAE,CACX,AAAC,CAAM,CAAC,EAAO,IAAI,CAAC,GAAE,CAAM,CAAC,EAAO,IAAI,CAAC,CAAG,EAAA,AAAE,EAClD,CAAM,CAAC,EAAO,IAAI,CAAC,CAAC,IAAI,CAAC,GAE7B,GAEA,IAAM,EAAkC,EAAE,CAmB1C,OAjBA,OAAO,OAAO,CAAC,GAAQ,OAAO,CAAC,CAAC,CAAC,EAAM,EAAY,IACjD,GAAI,EAAY,MAAM,EAAI,EAAG,CAC3B,IAAM,EAAK,EAAY,IAAI,CAAC,GAAoB,OAAf,EAAE,QAAQ,EACrC,EAAe,EAAY,MAAM,CAAC,GAAK,CAAC,KAAM,KAAM,KAAK,CAAC,QAAQ,CAAC,EAAE,QAAQ,GAE/E,GAAM,EAAa,MAAM,CAAG,GAC9B,AADiC,EACpB,OAAO,CAAC,IACnB,EAAa,IAAI,CAAC,CAChB,QAAS,CAAC,EAAG,SAAS,CAAE,EAAM,SAAS,CAAC,CACxC,eAAgB,CAAA,EAAG,EAAK,sCAAsC,CAAC,CAC/D,KAAM,EACR,EACF,EAEJ,CACF,GAEO,EAAa,KAAK,CAAC,EAAG,EAC/B,EApI2C,GAGnC,EAmIR,AAnIuB,SAmId,AAAwB,CAAc,CAAE,CAAc,EAC7D,IAAM,EAAsE,CAAC,EAE7E,EAAQ,OAAO,CAAC,IACT,AAAD,CAAY,CAAC,EAAO,SAAS,CAAC,EAAE,CAClC,CAAW,CAAC,EAAO,SAAS,CAAC,CAAG,QAAE,EAAQ,MAAO,EAAE,EAErD,CAAW,CAAC,EAAO,SAAS,CAAC,CAAC,KAAK,EACrC,GAEA,IAAM,EAAe,KAAK,GAAG,CAAC,EAAQ,MAAM,CAAE,GAExC,EAAe,OAAO,MAAM,CAAC,GAChC,GAAG,CAAC,CAAC,QAAE,CAAM,OAAE,CAAK,CAAE,QAwBQ,EAvB7B,IAAM,EAAY,AAuB2B,EAvBnB,EAAgB,IAC1C,MAAO,CACL,OAAQ,EAAO,SAAS,CACxB,SAAU,KAAK,KAAK,CAAC,GACrB,eAoBN,AAAI,CApBkB,EAA0B,GAoBjC,GAAW,CAAP,4CACf,EAAW,GAAW,CAAP,iCACf,EAAW,GAAW,CAAP,mBACZ,eAtBD,KAAM,EAAW,GAAK,OAAS,EAAW,GAAK,SAAW,KAC5D,CACF,GACC,MAAM,CAAC,GAAO,EAAI,QAAQ,CAAG,IAC7B,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,QAAQ,CAAG,EAAE,QAAQ,EAWzC,OAT4B,GAAG,CAA3B,EAAa,MAAM,EACrB,EAAa,IAAI,CAAC,CAChB,OAAQ,oBACR,SAAU,EACV,eAAgB,mCAChB,KAAM,KACR,GAGK,CACT,EAtK+C,EAAa,EAAU,OAAO,EAYrE,EAAU,AATI,EAAY,KAAK,CAAC,EAAG,IAAI,GAAG,CAAC,AAAC,GAAiB,MAAD,GAChE,EACA,cAAe,KAAK,KAAK,CAAiB,GAAhB,KAAK,MAAM,IACrC,gBAAiB,KAAK,KAAK,CAAiB,GAAhB,KAAK,MAAM,IAAW,EAClD,WAAY,CAAC,MAAO,OAAQ,QAAQ,CAAC,KAAK,KAAK,CAAC,AAAgB,OAAX,MAAM,IAAQ,CACnE,WAAY,EACd,CAAC,EAIE,MAAM,CAAC,AAAC,GAAoC,SAArB,EAAM,UAAU,EACvC,KAAK,CAAC,EAAG,GACT,GAAG,CAAC,AAAC,IAAgB,CACpB,GADmB,IACX,EAAM,MAAM,CAAC,SAAS,CAC9B,KAAM,EAAM,MAAM,CAAC,IAAI,EAAI,KAC3B,KAAM,CAAA,EAAG,EAAM,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CACxC,KAAM,EACN,SAAU,CAAC,KAAM,KAAK,CAAC,QAAQ,CAAC,EAAM,MAAM,CAAC,QAAQ,EAAI,OAAS,SACpE,CAAC,EAGoB,GAAG,CAAtB,EAAQ,MAAM,EAChB,EAAQ,IAAI,CAAC,CACX,OAAQ,CAAW,CAAC,EAAE,EAAE,WAAa,kBACrC,KAAM,CAAW,CAAC,EAAE,EAAE,MAAQ,MAC9B,KAAM,8BACN,KAAM,EACN,SAAU,QACZ,GAKF,IAAM,EADQ,AACE,IADE,IAAI,IAAI,EAAY,GAAG,CAAC,AAAC,GAAW,EAAE,IAAI,EAAE,MAAM,CAAC,UAAU,CACzD,KAAK,CAAC,EAAG,GAAG,GAAG,CAAE,AAAD,IAAgB,CACpD,EADmD,GAC7C,CAAA,EAAG,EAAK,YAAY,CAAC,CAC3B,KAAM,EACN,YAAa,KAAK,KAAK,CAAiB,GAAhB,KAAK,MAAM,IAAW,GAC9C,MAAO,CAAC,KAAM,OAAQ,SAAS,CAAC,KAAK,KAAK,CAAiB,EAAhB,KAAK,MAAM,IAAQ,CAC9D,WAAY,EACd,CAAC,CAEsB,GAAG,EAAtB,EAAQ,MAAM,EAChB,EAAQ,IAAI,CAAC,CACX,KAAM,wBACN,KAAM,CAAW,CAAC,EAAE,EAAE,MAAQ,MAC9B,YAAa,GACb,MAAO,SACP,WAAY,CACd,GAIF,IAAM,EAAwB,EAAE,CAkBhC,OAhBI,EAAe,MAAM,CAAG,GAAG,AAC7B,EAAQ,IAAI,CAAC,CACX,UAAW,IAAI,KAAK,KAAK,GAAG,GAAK,KAAQ,kBAAkB,GAC3D,KAAM,SACN,QAAS,CAAC,GAAG,EAAE,CAAc,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAc,CAAC,EAAE,CAAC,MAAM,CAAA,CAAE,CACvE,SAAU,QACZ,GAGF,EAAQ,IAAI,CAAC,CACX,UAAW,EACX,KAAM,SACN,QAAS,CAAC,mBAAmB,EAAE,EAAY,MAAM,CAAC,eAAe,CAAC,CAClE,SAAU,QACZ,GAEO,SACL,UACA,EACA,UAAW,EACX,SAAU,EACV,SAAU,EACV,SACF,CACF,CA+FA,SAAS,IACP,IAAM,EAAc,IAAI,OAAO,kBAAkB,GAEjD,MAAO,CACL,QAAS,CAAC,CACR,OAAQ,4BACR,KAAM,MACN,KAAM,gCACN,KAAM,EACN,SAAU,QACZ,EAAE,CACF,QAAS,CAAC,CACR,KAAM,2BACN,KAAM,QACN,YAAa,GACb,MAAO,SACP,WAAY,CACd,EAAE,CACF,UAAW,CAAC,CACV,OAAQ,8BACR,KAAM,MACN,OAAQ,eACR,OAAQ,iEACR,cAAe,QACjB,EAAE,CACF,SAAU,CAAC,CACT,QAAS,CAAC,UAAW,UAAU,CAC/B,eAAgB,iDAChB,KAAM,EACR,EAAE,CACF,SAAU,CAAC,CACT,OAAQ,iBACR,SAAU,EACV,eAAgB,gDAChB,KAAM,KACR,EAAE,CACF,QAAS,CAAC,CACR,UAAW,EACX,KAAM,SACN,QAAS,uEACT,SAAU,MACZ,EAAE,AACJ,CACF,CAGO,SAAS,EAAmB,CAAmB,EACpD,MAAO,CAAC,GAAG,EAAE,EAAM,MAAM,CAAC,EAAE,EAAE,EAAM,IAAI,CAAC,IAAI,EAAE,EAAM,IAAI,CAAC,IAAI,EAAE,EAAM,IAAI,CAAA,CAAE,AAC9E,CAEO,SAAS,EAAqB,CAAuB,EAC1D,IAAM,EAA0B,OAAlB,EAAQ,KAAK,CAAY,KAAyB,SAAlB,EAAQ,KAAK,CAAc,KAAO,KAChF,MAAO,CAAA,EAAG,EAAM,CAAC,EAAE,EAAQ,IAAI,CAAC,CAAC,EAAE,EAAQ,WAAW,CAAC,GAAG,EAAE,EAAQ,IAAI,CAAC,CAAC,CAC5E,AAD6E,CAGtE,SAAS,EAAqB,CAAwB,EAO3D,MAAO,CAAA,EANa,AAMV,EALR,SAAY,IACZ,aAAgB,IAChB,SAAY,KACZ,IAAO,KACT,CACqB,CAAC,EAAS,MAAM,CAAC,CAAC,CAAC,EAAE,EAAS,MAAM,CAAC,EAAE,EAAE,EAAS,IAAI,CAAC,IAAI,EAAE,EAAS,MAAM,CAAA,CAAE,AACrG,CAEO,SAAS,EAAsB,CAAyB,EAC7D,MAAO,CAAC,GAAG,EAAE,EAAS,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,EAAS,cAAc,CAAA,CAAE,AAC1E,CAEO,SAAS,EAAmB,CAAsB,EAEvD,MAAO,CAAA,EAAG,CADQ,CAAE,KAAQ,KAAM,OAAU,KAAM,IAAO,KAAK,CAC3C,CAAC,EAAS,IAAI,CAAC,CAAC,CAAC,EAAE,EAAS,MAAM,CAAC,EAAE,EAAE,EAAS,QAAQ,CAAC,KAAK,EAAE,EAAS,cAAc,CAAA,CAC5G,AAD8G,CAGvG,SAAS,EAAiB,CAAkB,EACjD,MAAO,CAAC,CAAC,EAAE,EAAO,SAAS,CAAC,EAAE,EAAE,EAAO,OAAO,CAAA,CAAE,AAClD"}