{"version":3,"sources":["turbopack:///[project]/lib/services/espnRealDataService.ts"],"sourcesContent":["// ESPN Real Data Service - Enhanced integration with actual ESPN Fantasy API\n// This service provides real-time data fetching from ESPN Fantasy Football\n\nimport { Team, Player } from '@/lib/types';\n\nconst ESPN_API_BASE = 'https://fantasy.espn.com/apis/v3/games/ffl';\nconst ESPN_SITE_API = 'https://site.api.espn.com/apis/site/v2/sports/football/nfl';\n\n// ESPN team ID to NFL team mapping\nconst ESPN_TEAM_MAP: Record<number, string> = {\n  1: 'ATL', 2: 'BUF', 3: 'CHI', 4: 'CIN', 5: 'CLE', 6: 'DAL', 7: 'DEN',\n  8: 'DET', 9: 'GB', 10: 'TEN', 11: 'IND', 12: 'KC', 13: 'LV', 14: 'LAR',\n  15: 'MIA', 16: 'MIN', 17: 'NE', 18: 'NO', 19: 'NYG', 20: 'NYJ', 21: 'PHI',\n  22: 'ARI', 23: 'PIT', 24: 'LAC', 25: 'SF', 26: 'SEA', 27: 'TB', 28: 'WSH',\n  29: 'CAR', 30: 'JAX', 33: 'BAL', 34: 'HOU'\n};\n\n// Position ID mapping\nconst POSITION_MAP: Record<number, string> = {\n  1: 'QB', 2: 'RB', 3: 'WR', 4: 'TE', 5: 'K', 16: 'D/ST'\n};\n\nexport class ESPNRealDataService {\n  private cookies: { espnS2?: string; SWID?: string } = {};\n  \n  constructor() {\n    // Initialize with any stored cookies\n    if (typeof window !== 'undefined') {\n      const stored = localStorage.getItem('espn_cookies');\n      if (stored) {\n        this.cookies = JSON.parse(stored);\n      }\n    }\n  }\n\n  setCookies(espnS2: string, swid: string) {\n    this.cookies = { espnS2, SWID: swid };\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('espn_cookies', JSON.stringify(this.cookies));\n    }\n  }\n\n  private async fetchWithCookies(url: string): Promise<any> {\n    const headers: HeadersInit = {\n      'Accept': 'application/json',\n    };\n\n    // Add cookies if available (for private leagues)\n    if (this.cookies.espnS2 && this.cookies.SWID) {\n      headers['Cookie'] = `espn_s2=${this.cookies.espnS2}; SWID=${this.cookies.SWID}`;\n    }\n\n    try {\n      const response = await fetch(url, { \n        headers,\n        credentials: 'include'\n      });\n\n      if (!response.ok) {\n        // Try without cookies for public data\n        const publicResponse = await fetch(url, {\n          headers: { 'Accept': 'application/json' }\n        });\n        \n        if (!publicResponse.ok) {\n          throw new Error(`ESPN API error: ${publicResponse.status}`);\n        }\n        \n        return publicResponse.json();\n      }\n\n      return response.json();\n    } catch (error) {\n      console.error('ESPN API fetch error:', error);\n      throw error;\n    }\n  }\n\n  async importLeague(leagueId: string, teamId?: string): Promise<Team[]> {\n    const year = new Date().getFullYear();\n    const teams: Team[] = [];\n\n    try {\n      // Fetch league data with multiple views\n      const url = `${ESPN_API_BASE}/seasons/${year}/segments/0/leagues/${leagueId}?` +\n        'view=mTeam&view=mRoster&view=mMatchup&view=mSettings&view=mStandings&view=mStatus&view=mLiveScoring';\n\n      const data = await this.fetchWithCookies(url);\n\n      if (!data || !data.teams) {\n        throw new Error('Unable to fetch ESPN league data');\n      }\n\n      // Get current week\n      const currentWeek = data.scoringPeriodId || 1;\n\n      // Process each team\n      for (const teamData of data.teams) {\n        const roster = await this.parseRoster(teamData.roster?.entries || []);\n        \n        // Find team's matchup\n        const matchup = data.schedule?.find((m: any) => \n          m.matchupPeriodId === Math.ceil(currentWeek / 1) &&\n          (m.home?.teamId === teamData.id || m.away?.teamId === teamData.id)\n        );\n\n        const isHome = matchup?.home?.teamId === teamData.id;\n        const opponent = isHome ? matchup?.away : matchup?.home;\n\n        const team: Team = {\n          id: `espn-${leagueId}-${teamData.id}`,\n          name: `${teamData.location} ${teamData.nickname}`.trim() || 'ESPN Team',\n          platform: 'espn',\n          leagueId: leagueId,\n          managerId: teamData.primaryOwner || '',\n          roster: roster,\n          record: {\n            wins: teamData.record?.overall?.wins || 0,\n            losses: teamData.record?.overall?.losses || 0,\n            ties: teamData.record?.overall?.ties || 0\n          },\n          standing: teamData.playoffSeed || teamData.rankCalculatedFinal || 0,\n          points: {\n            for: teamData.points || 0,\n            against: teamData.pointsAgainst || 0\n          },\n          projectedPoints: matchup ? (isHome ? matchup.home?.totalProjectedPoints : matchup.away?.totalProjectedPoints) || 0 : 0,\n          livePoints: matchup ? (isHome ? matchup.home?.totalPoints : matchup.away?.totalPoints) || 0 : 0,\n          matchup: opponent ? {\n            opponentId: `espn-${leagueId}-${opponent.teamId}`,\n            opponentName: data.teams.find((t: any) => t.id === opponent.teamId)?.name || 'Opponent',\n            opponentScore: opponent.totalPoints || 0,\n            week: currentWeek\n          } : undefined,\n          avatar: teamData.logo || '',\n          isUserTeam: teamId ? teamData.id.toString() === teamId : false,\n          lastUpdated: new Date().toISOString()\n        };\n\n        teams.push(team);\n      }\n\n      // If specific team requested, filter to just that team\n      if (teamId) {\n        return teams.filter(t => t.isUserTeam);\n      }\n\n      return teams;\n\n    } catch (error) {\n      console.error('Error importing ESPN league:', error);\n      // Return empty array instead of throwing to prevent app crashes\n      return [];\n    }\n  }\n\n  private async parseRoster(entries: any[]): Promise<Player[]> {\n    const players: Player[] = [];\n\n    for (const entry of entries) {\n      if (!entry.playerPoolEntry?.player) continue;\n\n      const playerData = entry.playerPoolEntry.player;\n      const stats = playerData.stats?.find((s: any) => s.statSourceId === 0) || {};\n      \n      // Get injury status\n      let injuryStatus = 'ACTIVE';\n      if (playerData.injured) {\n        injuryStatus = playerData.injuryStatus || 'QUESTIONABLE';\n      }\n\n      const player: Player = {\n        id: `espn-${playerData.id}`,\n        name: playerData.fullName,\n        position: POSITION_MAP[playerData.defaultPositionId] || 'FLEX',\n        team: ESPN_TEAM_MAP[playerData.proTeamId] || 'FA',\n        jerseyNumber: playerData.jersey || '',\n        status: {\n          isActive: entry.lineupSlotId < 20, // Bench slots start at 20\n          gameStatus: this.mapInjuryStatus(injuryStatus),\n          injuryDesignation: injuryStatus !== 'ACTIVE' ? injuryStatus : undefined\n        },\n        points: stats.appliedTotal || 0,\n        projectedPoints: stats.appliedProjectedTotal || 0,\n        stats: {\n          passingYards: stats.stats?.[3] || 0,\n          passingTDs: stats.stats?.[4] || 0,\n          rushingYards: stats.stats?.[24] || 0,\n          rushingTDs: stats.stats?.[25] || 0,\n          receptions: stats.stats?.[53] || 0,\n          receivingYards: stats.stats?.[42] || 0,\n          receivingTDs: stats.stats?.[43] || 0,\n          fantasyPoints: stats.appliedTotal || 0\n        },\n        percentOwned: playerData.ownership?.percentOwned || 0,\n        percentStarted: playerData.ownership?.percentStarted || 0,\n        avatar: `https://a.espncdn.com/combiner/i?img=/i/headshots/nfl/players/full/${playerData.id}.png&w=96&h=70`,\n        lastUpdate: new Date().toISOString()\n      };\n\n      players.push(player);\n    }\n\n    return players;\n  }\n\n  private mapInjuryStatus(status: string): 'playing' | 'questionable' | 'doubtful' | 'out' | 'ir' {\n    switch (status?.toUpperCase()) {\n      case 'ACTIVE':\n      case 'PROBABLE':\n        return 'playing';\n      case 'QUESTIONABLE':\n        return 'questionable';\n      case 'DOUBTFUL':\n        return 'doubtful';\n      case 'OUT':\n        return 'out';\n      case 'INJURY_RESERVE':\n      case 'IR':\n        return 'ir';\n      default:\n        return 'playing';\n    }\n  }\n\n  // Get live scores for all NFL games\n  async getLiveScores(): Promise<any[]> {\n    try {\n      const response = await fetch(`${ESPN_SITE_API}/scoreboard`);\n      const data = await response.json();\n      \n      return data.events?.map((event: any) => ({\n        id: event.id,\n        name: event.name,\n        shortName: event.shortName,\n        date: event.date,\n        completed: event.status.type.completed,\n        inProgress: event.status.type.state === 'in',\n        period: event.status.period,\n        clock: event.status.displayClock,\n        teams: event.competitions[0].competitors.map((team: any) => ({\n          id: team.team.id,\n          name: team.team.displayName,\n          abbreviation: team.team.abbreviation,\n          score: team.score,\n          homeAway: team.homeAway,\n          winner: team.winner\n        }))\n      })) || [];\n    } catch (error) {\n      console.error('Error fetching ESPN live scores:', error);\n      return [];\n    }\n  }\n\n  // Get player news\n  async getPlayerNews(playerId: string): Promise<any[]> {\n    try {\n      const response = await fetch(\n        `${ESPN_SITE_API}/athletes/${playerId}/news`\n      );\n      const data = await response.json();\n      \n      return data.articles?.map((article: any) => ({\n        headline: article.headline,\n        description: article.description,\n        published: article.published,\n        link: article.links?.web?.href\n      })) || [];\n    } catch (error) {\n      console.error('Error fetching ESPN player news:', error);\n      return [];\n    }\n  }\n}\n\nexport const espnRealDataService = new ESPNRealDataService();"],"names":[],"mappings":"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"}