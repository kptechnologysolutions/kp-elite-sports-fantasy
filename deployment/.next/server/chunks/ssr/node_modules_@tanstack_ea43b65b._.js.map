{"version":3,"sources":["turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/timeoutManager.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/utils.js","turbopack:///[project]/node_modules/@tanstack/query-core/src/notifyManager.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/subscribable.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/focusManager.ts","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/query.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/onlineManager.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/removable.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/retryer.js","turbopack:///[project]/node_modules/@tanstack/query-core/build/modern/thenable.js","turbopack:///[project]/node_modules/@tanstack/query-core/src/mutation.ts","turbopack:///[project]/node_modules/@tanstack/react-query/src/QueryClientProvider.tsx"],"sourcesContent":["// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// TYPES\n\nimport { systemSetTimeoutZero } from './timeoutManager'\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport const defaultScheduler: ScheduleFunction = systemSetTimeoutZero\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn = defaultScheduler\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  return {\n    batch: <T>(callback: () => T): T => {\n      let result\n      transactions++\n      try {\n        result = callback()\n      } finally {\n        transactions--\n        if (!transactions) {\n          flush()\n        }\n      }\n      return result\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: <T extends Array<unknown>>(\n      callback: BatchCallsCallback<T>,\n    ): BatchCallsCallback<T> => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args)\n        })\n      }\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn: NotifyFunction) => {\n      notifyFn = fn\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn: BatchNotifyFunction) => {\n      batchNotifyFn = fn\n    },\n    setScheduler: (fn: ScheduleFunction) => {\n      scheduleFn = fn\n    },\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n","export class Subscribable<TListener extends Function> {\n  protected listeners = new Set<TListener>()\n\n  constructor() {\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationFunctionContext,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\nimport type { QueryClient } from './queryClient'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TOnMutateResult> {\n  client: QueryClient\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TOnMutateResult>\n  state?: MutationState<TData, TError, TVariables, TOnMutateResult>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TOnMutateResult = unknown,\n> {\n  context: TOnMutateResult | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TOnMutateResult> {\n  type: 'pending'\n  isPaused: boolean\n  variables?: TVariables\n  context?: TOnMutateResult\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TOnMutateResult> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TOnMutateResult>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TOnMutateResult = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TOnMutateResult>\n  options!: MutationOptions<TData, TError, TVariables, TOnMutateResult>\n  readonly mutationId: number\n\n  #client: QueryClient\n  #observers: Array<\n    MutationObserver<TData, TError, TVariables, TOnMutateResult>\n  >\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(\n    config: MutationConfig<TData, TError, TVariables, TOnMutateResult>,\n  ) {\n    super()\n\n    this.#client = config.client\n    this.mutationId = config.mutationId\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options: MutationOptions<TData, TError, TVariables, TOnMutateResult>,\n  ): void {\n    this.options = options\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    const onContinue = () => {\n      this.#dispatch({ type: 'continue' })\n    }\n\n    const mutationFnContext = {\n      client: this.#client,\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey,\n    } satisfies MutationFunctionContext\n\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error('No mutationFn found'))\n        }\n\n        return this.options.mutationFn(variables, mutationFnContext)\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this),\n    })\n\n    const restored = this.state.status === 'pending'\n    const isPaused = !this.#retryer.canStart()\n\n    try {\n      if (restored) {\n        // Dispatch continue action to unpause restored mutation\n        onContinue()\n      } else {\n        this.#dispatch({ type: 'pending', variables, isPaused })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n        const context = await this.options.onMutate?.(\n          variables,\n          mutationFnContext,\n        )\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n            isPaused,\n          })\n        }\n      }\n      const data = await this.#retryer.start()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n        mutationFnContext,\n      )\n\n      await this.options.onSuccess?.(\n        data,\n        variables,\n        this.state.context!,\n        mutationFnContext,\n      )\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n        mutationFnContext,\n      )\n\n      await this.options.onSettled?.(\n        data,\n        null,\n        variables,\n        this.state.context,\n        mutationFnContext,\n      )\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n          mutationFnContext,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n          mutationFnContext,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    } finally {\n      this.#mutationCache.runNext(this)\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TOnMutateResult>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TOnMutateResult>,\n    ): MutationState<TData, TError, TVariables, TOnMutateResult> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TOnMutateResult,\n>(): MutationState<TData, TError, TVariables, TOnMutateResult> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n","'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,5,6,7,8,9]}