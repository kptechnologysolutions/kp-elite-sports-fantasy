module.exports=[50981,a=>{"use strict";a.s(["sleeperAPI",()=>d]);let b="https://api.sleeper.app/v1",c="2025",d=new class{async getUser(a){try{let c=await fetch(`${b}/user/${a}`);if(!c.ok)return null;return await c.json()}catch(a){return console.error("Error fetching Sleeper user:",a),null}}async getUserLeagues(a,d=c){try{let c=await fetch(`${b}/user/${a}/leagues/nfl/${d}`);if(!c.ok)return[];return await c.json()}catch(a){return console.error("Error fetching user leagues:",a),[]}}async getLeagueRosters(a){try{let c=await fetch(`${b}/league/${a}/rosters`);if(!c.ok)return[];return await c.json()}catch(a){return console.error("Error fetching league rosters:",a),[]}}async getLeagueUsers(a){try{let c=await fetch(`${b}/league/${a}/users`);if(!c.ok)return[];return await c.json()}catch(a){return console.error("Error fetching league users:",a),[]}}async getMatchups(a,c){try{let d=await fetch(`${b}/league/${a}/matchups/${c}`);if(!d.ok)return[];return await d.json()}catch(a){return console.error("Error fetching matchups:",a),[]}}async getAllPlayers(){try{let a=await fetch(`${b}/players/nfl`);if(!a.ok)return{};return await a.json()}catch(a){return console.error("Error fetching NFL players:",a),{}}}async getNFLState(){try{let a=await fetch(`${b}/state/nfl`);if(!a.ok)return null;return await a.json()}catch(a){return console.error("Error fetching NFL state:",a),null}}async getTrendingPlayers(a,c=24,d=10){try{let e=await fetch(`${b}/players/nfl/trending/${a}?lookback_hours=${c}&limit=${d}`);if(!e.ok)return[];return await e.json()}catch(a){return console.error("Error fetching trending players:",a),[]}}async getUserTeam(a,d){let e=await this.getUser(a);if(!e)return null;let f=await this.getLeagueRosters(d),g=f.find(a=>a.owner_id===e.user_id);if(!g)return null;let h=await this.getLeagueUsers(d),i=h.find(a=>a.user_id===e.user_id),j=await fetch(`${b}/league/${d}/users`),k=await j.json(),l=k.find(a=>a.user_id===e.user_id),m=l?.metadata?.team_name||i?.display_name||e.display_name||e.username,n=await fetch(`${b}/league/${d}`),o=await n.json(),p=await this.getNFLState(),q=p?.leg||p?.week||1,r=p?.season||c;console.log("NFL State:",{currentWeek:q,currentSeason:r,leg:p?.leg,week:p?.week,display_week:p?.display_week,season_type:p?.season_type,nflState:p});let s=await this.getMatchups(d,q),t=s.find(a=>a.roster_id===g.roster_id),u=null,v=null,w=null,x="Opponent";if(t&&(u=s.find(a=>a.matchup_id===t.matchup_id&&a.roster_id!==g.roster_id))&&(v=f.find(a=>a.roster_id===u.roster_id))){w=h.find(a=>a.user_id===v.owner_id);let a=k.find(a=>a.user_id===v.owner_id);x=a?.metadata?.team_name||w?.display_name||w?.username||"Opponent"}let y=await this.getAllPlayers(),z={};t&&t.players_points&&Object.assign(z,t.players_points);let A=g.players.map(a=>{let b=y[a];if(!b)return null;let c=z[a]||0;return{id:a,name:b.full_name||`${b.first_name} ${b.last_name}`,position:b.position,team:b.team,jerseyNumber:b.number,status:{isActive:"Active"===b.status,gameStatus:b.injury_status||"playing",lastUpdated:new Date},injuryStatus:b.injury_status?{type:b.injury_status,description:b.injury_status,severity:"unknown",practiceStatus:"unknown"}:void 0,stats:{season:parseInt(r),week:q,fantasyPoints:c,projectedPoints:0,isStarter:t?.starters?.includes(a)||!1}}}).filter(Boolean);return console.log("User Matchup Data:",{week:q,userPoints:t?.points,opponentPoints:u?.points,userMatchup:t,opponentMatchup:u}),{user:e,league:{id:o.league_id,name:o.name,size:o.total_rosters,scoringType:o.scoring_settings?.rec?"PPR":"Standard",season:o.season},roster:{...g,teamName:m,players:A,rank:g.settings?.rank||1,settings:g.settings},matchup:{...t,points:t?.points||0,opponentName:x,opponentScore:u?.points||0,opponentRosterId:u?.roster_id,week:q},currentWeek:q,currentSeason:r}}async importUserTeams(a){let b=await this.getUser(a);if(!b)throw Error(`User "${a}" not found on Sleeper`);let c=await this.getUserLeagues(b.user_id),d=[];for(let b of c){let c=await this.getUserTeam(a,b.league_id);c&&d.push({platform:"Sleeper",leagueId:b.league_id,leagueName:b.name,teamName:c.roster.teamName,roster:c.roster,league:c.league,matchup:c.matchup})}return d}}}];

//# sourceMappingURL=lib_api_sleeper_ts_88e0ed59._.js.map