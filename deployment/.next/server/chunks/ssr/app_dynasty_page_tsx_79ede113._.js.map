{"version":3,"sources":["turbopack:///[project]/app/dynasty/page.tsx","turbopack:///[project]/components/dynasty/DynastyDashboard.tsx","turbopack:///[project]/lib/services/dynastyService.ts"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { ModernNav } from '@/components/layout/ModernNav';\nimport { DynastyDashboard } from '@/components/dynasty/DynastyDashboard';\nimport { MultiTeamSwitcher } from '@/components/teams/MultiTeamSwitcher';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { AlertCircle } from 'lucide-react';\nimport useSleeperStore from '@/lib/store/useSleeperStore';\n\nexport default function DynastyPage() {\n  const router = useRouter();\n  const {\n    user,\n    leagues,\n    currentLeague,\n    error\n  } = useSleeperStore();\n  \n  // Redirect if not logged in\n  useEffect(() => {\n    if (!user) {\n      router.push('/login');\n    }\n  }, [user, router]);\n  \n  if (!user) return null;\n  \n  return (\n    <div className=\"min-h-screen bg-background\">\n      <ModernNav />\n      \n      {/* Multi-Team Switcher */}\n      {leagues.length > 0 && (\n        <div className=\"container mx-auto p-4\">\n          <div className=\"max-w-md\">\n            <MultiTeamSwitcher />\n          </div>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"container mx-auto px-4\">\n          <Alert variant=\"destructive\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription>{error}</AlertDescription>\n          </Alert>\n        </div>\n      )}\n      \n      {!currentLeague && leagues.length > 1 && (\n        <div className=\"container mx-auto p-4\">\n          <Alert>\n            <AlertDescription>\n              Please select a league from above to view dynasty analysis\n            </AlertDescription>\n          </Alert>\n        </div>\n      )}\n      \n      {currentLeague && (\n        <main className=\"container mx-auto p-4\">\n          <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\">Dynasty League Analysis</h1>\n            <p className=\"text-muted-foreground\">\n              Long-term team building and player valuation for {currentLeague.name}\n            </p>\n          </div>\n          \n          <DynastyDashboard />\n        </main>\n      )}\n    </div>\n  );\n}","'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { \n  TrendingUp, \n  TrendingDown, \n  Crown, \n  Users, \n  Calendar,\n  Star,\n  AlertTriangle,\n  Target,\n  Zap,\n  Activity\n} from 'lucide-react';\nimport { \n  dynastyService, \n  DynastyRoster, \n  DynastyPlayerValue,\n  RookieProfile \n} from '@/lib/services/dynastyService';\nimport useSleeperStore from '@/lib/store/useSleeperStore';\nimport { cn } from '@/lib/utils';\n\nexport function DynastyDashboard() {\n  const [dynastyRoster, setDynastyRoster] = useState<DynastyRoster | null>(null);\n  const [rookieRankings, setRookieRankings] = useState<RookieProfile[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  const {\n    currentLeague,\n    myRoster,\n    players,\n    rosters,\n    leagueUsers\n  } = useSleeperStore();\n  \n  useEffect(() => {\n    if (myRoster && players.size > 0) {\n      analyzeDynastyTeam();\n    }\n  }, [myRoster, players]);\n  \n  const analyzeDynastyTeam = async () => {\n    if (!myRoster) return;\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Initialize dynasty values\n      await dynastyService.initializeDynastyValues(players);\n      \n      // Analyze roster\n      const analysis = dynastyService.analyzeDynastyRoster(\n        myRoster.players,\n        myRoster.roster_id\n      );\n      \n      setDynastyRoster(analysis);\n      \n      // Get rookie rankings\n      const rookies = dynastyService.generateRookieRankings();\n      setRookieRankings(rookies);\n      \n    } catch (err: any) {\n      setError(err.message || 'Failed to analyze dynasty team');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const getContendingWindowColor = (window: DynastyRoster['contendingWindow']) => {\n    switch (window) {\n      case 'now': return 'text-green-600';\n      case 'next-year': return 'text-yellow-600';\n      case 'rebuilding': return 'text-blue-600';\n      default: return 'text-gray-600';\n    }\n  };\n  \n  const getContendingWindowIcon = (window: DynastyRoster['contendingWindow']) => {\n    switch (window) {\n      case 'now': return Crown;\n      case 'next-year': return Target;\n      case 'rebuilding': return Activity;\n      default: return Users;\n    }\n  };\n  \n  const getTrendIcon = (trend: DynastyPlayerValue['trend']) => {\n    switch (trend) {\n      case 'up': return TrendingUp;\n      case 'down': return TrendingDown;\n      default: return Activity;\n    }\n  };\n  \n  const getTrendColor = (trend: DynastyPlayerValue['trend']) => {\n    switch (trend) {\n      case 'up': return 'text-green-600';\n      case 'down': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n  \n  const getKeeperValueColor = (value: DynastyPlayerValue['keeperValue']) => {\n    switch (value) {\n      case 'elite': return 'bg-purple-100 text-purple-800';\n      case 'high': return 'bg-green-100 text-green-800';\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\n      case 'low': return 'bg-orange-100 text-orange-800';\n      case 'cut': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n  \n  if (!currentLeague) {\n    return (\n      <Card>\n        <CardContent className=\"py-8\">\n          <div className=\"text-center text-muted-foreground\">\n            Please select a league to view dynasty analysis\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  if (isLoading) {\n    return (\n      <Card>\n        <CardContent className=\"py-8\">\n          <div className=\"text-center\">\n            <Activity className=\"h-8 w-8 mx-auto animate-spin text-primary mb-4\" />\n            <p className=\"text-muted-foreground\">Analyzing dynasty team...</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  if (error) {\n    return (\n      <Card>\n        <CardContent className=\"py-8\">\n          <Alert variant=\"destructive\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription>{error}</AlertDescription>\n          </Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  if (!dynastyRoster) {\n    return (\n      <Card>\n        <CardContent className=\"py-8\">\n          <div className=\"text-center text-muted-foreground\">\n            No dynasty analysis available\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  const WindowIcon = getContendingWindowIcon(dynastyRoster.contendingWindow);\n  \n  return (\n    <div className=\"space-y-6\">\n      {/* Dynasty Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-lg flex items-center gap-2\">\n              <Star className=\"h-5 w-5\" />\n              Dynasty Value\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold\">{dynastyRoster.totalValue}</div>\n            <div className=\"text-sm text-muted-foreground\">Total Points</div>\n            <Progress value={(dynastyRoster.totalValue / 1200) * 100} className=\"mt-2\" />\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-lg flex items-center gap-2\">\n              <Calendar className=\"h-5 w-5\" />\n              Average Age\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold\">{dynastyRoster.averageAge}</div>\n            <div className=\"text-sm text-muted-foreground\">Years</div>\n            <div className=\"mt-2\">\n              <Badge variant={dynastyRoster.averageAge < 26 ? 'default' : \n                           dynastyRoster.averageAge < 29 ? 'secondary' : 'destructive'}>\n                {dynastyRoster.averageAge < 26 ? 'Young' : \n                 dynastyRoster.averageAge < 29 ? 'Prime' : 'Aging'}\n              </Badge>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-lg flex items-center gap-2\">\n              <WindowIcon className={cn(\"h-5 w-5\", getContendingWindowColor(dynastyRoster.contendingWindow))} />\n              Window\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className={cn(\"text-lg font-bold capitalize\", getContendingWindowColor(dynastyRoster.contendingWindow))}>\n              {dynastyRoster.contendingWindow === 'now' ? 'Contending Now' :\n               dynastyRoster.contendingWindow === 'next-year' ? 'Next Year' : 'Rebuilding'}\n            </div>\n            <div className=\"text-sm text-muted-foreground\">\n              {dynastyRoster.contendingWindow === 'now' ? 'Championship window open' :\n               dynastyRoster.contendingWindow === 'next-year' ? 'Building toward contention' : \n               'Focus on future assets'}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n      \n      {/* Dynasty Tabs */}\n      <Tabs defaultValue=\"roster\" className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"roster\">Roster Analysis</TabsTrigger>\n          <TabsTrigger value=\"keepers\">Keepers</TabsTrigger>\n          <TabsTrigger value=\"strategy\">Strategy</TabsTrigger>\n          <TabsTrigger value=\"rookies\">Rookies</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"roster\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Player Dynasty Values</CardTitle>\n              <CardDescription>\n                Dynasty values based on age, position, and long-term outlook\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {dynastyRoster.playerValues\n                  .sort((a, b) => b.dynastyValue - a.dynastyValue)\n                  .slice(0, 15)\n                  .map((player) => {\n                    const TrendIcon = getTrendIcon(player.trend);\n                    \n                    return (\n                      <div key={player.playerId} className=\"flex items-center justify-between p-3 rounded-lg border\">\n                        <div className=\"flex items-center gap-3\">\n                          <div>\n                            <div className=\"font-medium\">{player.playerName}</div>\n                            <div className=\"text-sm text-muted-foreground\">\n                              {player.position} • {player.team} • Age {player.age}\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"text-right\">\n                            <div className=\"font-bold\">{player.dynastyValue}</div>\n                            <div className=\"text-xs text-muted-foreground\">Dynasty Pts</div>\n                          </div>\n                          \n                          <div className=\"flex items-center gap-2\">\n                            <TrendIcon className={cn(\"h-4 w-4\", getTrendColor(player.trend))} />\n                            {player.breakoutCandidate && (\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                <Zap className=\"h-3 w-3 mr-1\" />\n                                Breakout\n                              </Badge>\n                            )}\n                            {player.veteranDecline && (\n                              <Badge variant=\"destructive\" className=\"text-xs\">\n                                Decline\n                              </Badge>\n                            )}\n                          </div>\n                          \n                          <Badge className={cn(\"text-xs\", getKeeperValueColor(player.keeperValue))}>\n                            {player.keeperValue}\n                          </Badge>\n                        </div>\n                      </div>\n                    );\n                  })}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"keepers\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Keeper Recommendations</CardTitle>\n              <CardDescription>\n                Suggested players to keep for dynasty league\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                {dynastyRoster.keeperRecommendations.map((rec, idx) => (\n                  <div key={idx} className=\"flex items-center gap-2 p-2 rounded bg-green-50\">\n                    <Star className=\"h-4 w-4 text-green-600\" />\n                    <span>{rec}</span>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"strategy\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-green-600 flex items-center gap-2\">\n                  <Target className=\"h-5 w-5\" />\n                  Trade Targets\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  {dynastyRoster.tradeTargets.map((target, idx) => (\n                    <div key={idx} className=\"flex items-start gap-2\">\n                      <span className=\"text-green-600\">•</span>\n                      <span className=\"text-sm\">{target}</span>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-red-600 flex items-center gap-2\">\n                  <TrendingDown className=\"h-5 w-5\" />\n                  Sell Candidates\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  {dynastyRoster.sellCandidates.length > 0 ? (\n                    dynastyRoster.sellCandidates.map((candidate, idx) => (\n                      <div key={idx} className=\"flex items-start gap-2\">\n                        <span className=\"text-red-600\">•</span>\n                        <span className=\"text-sm\">{candidate}</span>\n                      </div>\n                    ))\n                  ) : (\n                    <p className=\"text-sm text-muted-foreground\">No immediate sell candidates</p>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n        \n        <TabsContent value=\"rookies\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>2025 Rookie Rankings</CardTitle>\n              <CardDescription>\n                Dynasty values for incoming rookie class\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {rookieRankings.slice(0, 10).map((rookie, idx) => (\n                  <div key={rookie.playerId} className=\"flex items-center justify-between p-3 rounded-lg border\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">\n                        {idx + 1}\n                      </div>\n                      <div>\n                        <div className=\"font-medium\">{rookie.playerName}</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {rookie.position} • {rookie.college} • Pick #{rookie.draftCapital}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"text-right\">\n                        <div className=\"font-bold\">{rookie.projectedValue}</div>\n                        <div className=\"text-xs text-muted-foreground\">Projected</div>\n                      </div>\n                      \n                      <div className=\"flex flex-col gap-1\">\n                        {rookie.immediateImpact && (\n                          <Badge variant=\"default\" className=\"text-xs\">\n                            Immediate Impact\n                          </Badge>\n                        )}\n                        <Badge \n                          variant={rookie.situation === 'excellent' ? 'default' : \n                                  rookie.situation === 'good' ? 'secondary' : 'outline'}\n                          className=\"text-xs\"\n                        >\n                          {rookie.situation} situation\n                        </Badge>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}","// Dynasty League Service for keeper management, player values, and rookies\nimport { SleeperPlayer } from './sleeperService';\n\nexport interface DynastyPlayerValue {\n  playerId: string;\n  playerName: string;\n  position: string;\n  team: string | null;\n  age: number | null;\n  dynastyValue: number; // 1-100 scale\n  oneQBValue: number;\n  superflexValue: number;\n  trend: 'up' | 'down' | 'stable';\n  trendPercent: number;\n  keeperValue: 'elite' | 'high' | 'medium' | 'low' | 'cut';\n  injuryRisk: 'low' | 'medium' | 'high';\n  breakoutCandidate: boolean;\n  veteranDecline: boolean;\n}\n\nexport interface RookieProfile {\n  playerId: string;\n  playerName: string;\n  position: string;\n  college: string;\n  draftCapital: number; // NFL draft position\n  situation: 'excellent' | 'good' | 'average' | 'poor';\n  projectedValue: number;\n  redshirtCandidate: boolean;\n  immediateImpact: boolean;\n}\n\nexport interface DynastyRoster {\n  rosterId: number;\n  playerValues: DynastyPlayerValue[];\n  totalValue: number;\n  averageAge: number;\n  contendingWindow: 'now' | 'next-year' | 'rebuilding';\n  keeperRecommendations: string[];\n  tradeTargets: string[];\n  sellCandidates: string[];\n}\n\n// Dynasty trade analysis interface\nexport interface DynastyTrade {\n  team1Assets: string[];\n  team2Assets: string[];\n  team1Value: number;\n  team2Value: number;\n  fairness: 'heavily-favors-1' | 'favors-1' | 'fair' | 'favors-2' | 'heavily-favors-2';\n  contendingImpact: string;\n  rebuildingImpact: string;\n}\n\nclass DynastyService {\n  private dynastyValues: Map<string, DynastyPlayerValue> = new Map();\n  private rookieProfiles: Map<string, RookieProfile> = new Map();\n  \n  /**\n   * Initialize dynasty player values (would normally come from API)\n   */\n  async initializeDynastyValues(players: Map<string, SleeperPlayer>): Promise<void> {\n    // Mock dynasty values based on position and age\n    players.forEach((player, playerId) => {\n      if (player.position && ['QB', 'RB', 'WR', 'TE'].includes(player.position)) {\n        const dynastyValue = this.calculateDynastyValue(player);\n        this.dynastyValues.set(playerId, dynastyValue);\n      }\n    });\n  }\n  \n  /**\n   * Calculate dynasty value for a player\n   */\n  private calculateDynastyValue(player: SleeperPlayer): DynastyPlayerValue {\n    const age = player.age || 25;\n    const position = player.position;\n    \n    // Base values by position and age\n    let baseValue = 50;\n    \n    // Position adjustments\n    if (position === 'QB') {\n      baseValue = age < 24 ? 75 : age < 30 ? 65 : 40;\n    } else if (position === 'RB') {\n      baseValue = age < 24 ? 70 : age < 27 ? 60 : age < 30 ? 35 : 20;\n    } else if (position === 'WR') {\n      baseValue = age < 25 ? 65 : age < 30 ? 55 : age < 33 ? 40 : 25;\n    } else if (position === 'TE') {\n      baseValue = age < 26 ? 60 : age < 31 ? 50 : 30;\n    }\n    \n    // Add randomness for realism\n    const variance = Math.random() * 30 - 15; // -15 to +15\n    const dynastyValue = Math.max(1, Math.min(100, baseValue + variance));\n    \n    // Determine trend\n    let trend: 'up' | 'down' | 'stable' = 'stable';\n    let trendPercent = 0;\n    \n    if (age < 24) {\n      trend = Math.random() > 0.3 ? 'up' : 'stable';\n      trendPercent = Math.random() * 15;\n    } else if (age > 29) {\n      trend = Math.random() > 0.4 ? 'down' : 'stable';\n      trendPercent = -(Math.random() * 12);\n    }\n    \n    // Keeper value\n    let keeperValue: DynastyPlayerValue['keeperValue'] = 'medium';\n    if (dynastyValue > 80) keeperValue = 'elite';\n    else if (dynastyValue > 65) keeperValue = 'high';\n    else if (dynastyValue < 30) keeperValue = 'cut';\n    else if (dynastyValue < 45) keeperValue = 'low';\n    \n    return {\n      playerId: player.player_id,\n      playerName: player.full_name,\n      position: player.position,\n      team: player.team,\n      age: player.age,\n      dynastyValue: Math.round(dynastyValue),\n      oneQBValue: Math.round(dynastyValue * 0.9), // Slightly lower for 1QB\n      superflexValue: Math.round(dynastyValue * (position === 'QB' ? 1.2 : 1.0)),\n      trend,\n      trendPercent: Math.round(trendPercent),\n      keeperValue,\n      injuryRisk: this.calculateInjuryRisk(player),\n      breakoutCandidate: age < 25 && dynastyValue > 40 && dynastyValue < 70,\n      veteranDecline: age > 30 && trend === 'down'\n    };\n  }\n  \n  /**\n   * Calculate injury risk\n   */\n  private calculateInjuryRisk(player: SleeperPlayer): DynastyPlayerValue['injuryRisk'] {\n    const age = player.age || 25;\n    const position = player.position;\n    \n    // RBs have higher injury risk, older players too\n    if (position === 'RB' && age > 27) return 'high';\n    if (age > 32) return 'high';\n    if (position === 'RB' || age > 29) return 'medium';\n    \n    return 'low';\n  }\n  \n  /**\n   * Analyze dynasty roster\n   */\n  analyzeDynastyRoster(\n    playerIds: string[],\n    rosterId: number\n  ): DynastyRoster {\n    const playerValues = playerIds\n      .map(id => this.dynastyValues.get(id))\n      .filter(Boolean) as DynastyPlayerValue[];\n    \n    const totalValue = playerValues.reduce((sum, p) => sum + p.dynastyValue, 0);\n    const averageAge = playerValues.reduce((sum, p) => sum + (p.age || 25), 0) / playerValues.length;\n    \n    // Determine contending window\n    let contendingWindow: DynastyRoster['contendingWindow'] = 'rebuilding';\n    if (totalValue > 800 && averageAge < 28) {\n      contendingWindow = 'now';\n    } else if (totalValue > 600 && averageAge < 30) {\n      contendingWindow = 'next-year';\n    }\n    \n    return {\n      rosterId,\n      playerValues,\n      totalValue,\n      averageAge: Math.round(averageAge * 10) / 10,\n      contendingWindow,\n      keeperRecommendations: this.getKeeperRecommendations(playerValues),\n      tradeTargets: this.getTradeTargets(playerValues, contendingWindow),\n      sellCandidates: this.getSellCandidates(playerValues, contendingWindow)\n    };\n  }\n  \n  /**\n   * Get keeper recommendations\n   */\n  private getKeeperRecommendations(players: DynastyPlayerValue[]): string[] {\n    return players\n      .filter(p => p.keeperValue === 'elite' || p.keeperValue === 'high')\n      .sort((a, b) => b.dynastyValue - a.dynastyValue)\n      .slice(0, 8)\n      .map(p => `${p.playerName} (${p.dynastyValue} pts)`);\n  }\n  \n  /**\n   * Get trade targets based on contending window\n   */\n  private getTradeTargets(\n    players: DynastyPlayerValue[],\n    window: DynastyRoster['contendingWindow']\n  ): string[] {\n    if (window === 'now') {\n      return [\n        'Target proven veterans for championship push',\n        'Look for WRs in good situations',\n        'Acquire reliable TEs',\n        'Don\\'t overpay for rookies'\n      ];\n    } else if (window === 'next-year') {\n      return [\n        'Target young players with upside',\n        'Acquire draft picks',\n        'Look for breakout candidates',\n        'Avoid aging veterans'\n      ];\n    } else {\n      return [\n        'Trade veterans for picks',\n        'Target rookie draft picks',\n        'Acquire young players with potential',\n        'Sell aging assets while they have value'\n      ];\n    }\n  }\n  \n  /**\n   * Get sell candidates\n   */\n  private getSellCandidates(\n    players: DynastyPlayerValue[],\n    window: DynastyRoster['contendingWindow']\n  ): string[] {\n    if (window === 'rebuilding') {\n      return players\n        .filter(p => p.age && p.age > 28 && p.dynastyValue > 50)\n        .sort((a, b) => (b.age || 0) - (a.age || 0))\n        .slice(0, 5)\n        .map(p => `${p.playerName} (Age ${p.age}, ${p.dynastyValue} pts)`);\n    }\n    \n    return players\n      .filter(p => p.veteranDecline || (p.age && p.age > 32))\n      .map(p => `${p.playerName} (${p.trend === 'down' ? 'Declining' : 'Old'})`);\n  }\n  \n  /**\n   * Evaluate dynasty trade\n   */\n  evaluateDynastyTrade(\n    team1Assets: string[],\n    team2Assets: string[],\n    team1Window: DynastyRoster['contendingWindow'],\n    team2Window: DynastyRoster['contendingWindow']\n  ): DynastyTrade {\n    const team1Value = team1Assets.reduce((sum, playerId) => {\n      const player = this.dynastyValues.get(playerId);\n      return sum + (player?.dynastyValue || 0);\n    }, 0);\n    \n    const team2Value = team2Assets.reduce((sum, playerId) => {\n      const player = this.dynastyValues.get(playerId);\n      return sum + (player?.dynastyValue || 0);\n    }, 0);\n    \n    const valueDiff = Math.abs(team1Value - team2Value);\n    const avgValue = (team1Value + team2Value) / 2;\n    const diffPercent = valueDiff / avgValue;\n    \n    let fairness: DynastyTrade['fairness'] = 'fair';\n    if (diffPercent > 0.3) {\n      fairness = team1Value > team2Value ? 'heavily-favors-1' : 'heavily-favors-2';\n    } else if (diffPercent > 0.15) {\n      fairness = team1Value > team2Value ? 'favors-1' : 'favors-2';\n    }\n    \n    return {\n      team1Assets,\n      team2Assets,\n      team1Value,\n      team2Value,\n      fairness,\n      contendingImpact: this.getTradeImpact(team1Assets, 'now'),\n      rebuildingImpact: this.getTradeImpact(team1Assets, 'rebuilding')\n    };\n  }\n  \n  /**\n   * Get trade impact description\n   */\n  private getTradeImpact(assets: string[], window: DynastyRoster['contendingWindow']): string {\n    const players = assets.map(id => this.dynastyValues.get(id)).filter(Boolean);\n    const avgAge = players.reduce((sum, p) => sum + (p!.age || 25), 0) / players.length;\n    const totalValue = players.reduce((sum, p) => sum + p!.dynastyValue, 0);\n    \n    if (window === 'now') {\n      if (avgAge > 28) return 'Good for immediate impact';\n      return 'Mixed value for contending';\n    } else {\n      if (avgAge < 26) return 'Excellent for rebuilding';\n      return 'Limited long-term value';\n    }\n  }\n  \n  /**\n   * Get dynasty player value\n   */\n  getDynastyValue(playerId: string): DynastyPlayerValue | undefined {\n    return this.dynastyValues.get(playerId);\n  }\n  \n  /**\n   * Get all dynasty values\n   */\n  getAllDynastyValues(): Map<string, DynastyPlayerValue> {\n    return this.dynastyValues;\n  }\n  \n  /**\n   * Generate rookie draft rankings\n   */\n  generateRookieRankings(year: string = '2025'): RookieProfile[] {\n    // Mock rookie data - in real app, this would come from API\n    const mockRookies: RookieProfile[] = [\n      {\n        playerId: 'rookie_2025_001',\n        playerName: 'Caleb Williams',\n        position: 'QB',\n        college: 'USC',\n        draftCapital: 1,\n        situation: 'good',\n        projectedValue: 85,\n        redshirtCandidate: false,\n        immediateImpact: true\n      },\n      {\n        playerId: 'rookie_2025_002',\n        playerName: 'Rome Odunze',\n        position: 'WR',\n        college: 'Washington',\n        draftCapital: 9,\n        situation: 'excellent',\n        projectedValue: 75,\n        redshirtCandidate: false,\n        immediateImpact: true\n      }\n      // Add more rookies...\n    ];\n    \n    return mockRookies.sort((a, b) => b.projectedValue - a.projectedValue);\n  }\n}\n\nexport const dynastyService = new DynastyService();"],"names":[],"mappings":"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"}