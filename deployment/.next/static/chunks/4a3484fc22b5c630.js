(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,67181,e=>{"use strict";e.s(["sleeperAPI",()=>a]);let t="https://api.sleeper.app/v1",r="2025",a=new class{async getUser(e){try{let r=await fetch("".concat(t,"/user/").concat(e));if(!r.ok)return null;return await r.json()}catch(e){return console.error("Error fetching Sleeper user:",e),null}}async getUserLeagues(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r;try{let r=await fetch("".concat(t,"/user/").concat(e,"/leagues/nfl/").concat(a));if(!r.ok)return[];return await r.json()}catch(e){return console.error("Error fetching user leagues:",e),[]}}async getLeagueRosters(e){try{let r=await fetch("".concat(t,"/league/").concat(e,"/rosters"));if(!r.ok)return[];return await r.json()}catch(e){return console.error("Error fetching league rosters:",e),[]}}async getLeagueUsers(e){try{let r=await fetch("".concat(t,"/league/").concat(e,"/users"));if(!r.ok)return[];return await r.json()}catch(e){return console.error("Error fetching league users:",e),[]}}async getMatchups(e,r){try{let a=await fetch("".concat(t,"/league/").concat(e,"/matchups/").concat(r));if(!a.ok)return[];return await a.json()}catch(e){return console.error("Error fetching matchups:",e),[]}}async getAllPlayers(){try{let e=await fetch("".concat(t,"/players/nfl"));if(!e.ok)return{};return await e.json()}catch(e){return console.error("Error fetching NFL players:",e),{}}}async getNFLState(){try{let e=await fetch("".concat(t,"/state/nfl"));if(!e.ok)return null;return await e.json()}catch(e){return console.error("Error fetching NFL state:",e),null}}async getTrendingPlayers(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:24,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10;try{let n=await fetch("".concat(t,"/players/nfl/trending/").concat(e,"?lookback_hours=").concat(r,"&limit=").concat(a));if(!n.ok)return[];return await n.json()}catch(e){return console.error("Error fetching trending players:",e),[]}}async getUserTeam(e,a){var n,s,o,i;let l=await this.getUser(e);if(!l)return null;let u=await this.getLeagueRosters(a),c=u.find(e=>e.owner_id===l.user_id);if(!c)return null;let d=await this.getLeagueUsers(a),g=d.find(e=>e.user_id===l.user_id),p=await fetch("".concat(t,"/league/").concat(a,"/users")),h=await p.json(),f=h.find(e=>e.user_id===l.user_id),y=(null==f||null==(n=f.metadata)?void 0:n.team_name)||(null==g?void 0:g.display_name)||l.display_name||l.username,m=await fetch("".concat(t,"/league/").concat(a)),w=await m.json(),_=await this.getNFLState(),v=(null==_?void 0:_.leg)||(null==_?void 0:_.week)||1,k=(null==_?void 0:_.season)||r;console.log("NFL State:",{currentWeek:v,currentSeason:k,leg:null==_?void 0:_.leg,week:null==_?void 0:_.week,display_week:null==_?void 0:_.display_week,season_type:null==_?void 0:_.season_type,nflState:_});let j=await this.getMatchups(a,v),U=j.find(e=>e.roster_id===c.roster_id),S=null,P=null,L=null,N="Opponent";if(U&&(S=j.find(e=>e.matchup_id===U.matchup_id&&e.roster_id!==c.roster_id))&&(P=u.find(e=>e.roster_id===S.roster_id))){L=d.find(e=>e.user_id===P.owner_id);let e=h.find(e=>e.user_id===P.owner_id);N=(null==e||null==(i=e.metadata)?void 0:i.team_name)||(null==L?void 0:L.display_name)||(null==L?void 0:L.username)||"Opponent"}let E=await this.getAllPlayers(),T={};U&&U.players_points&&Object.assign(T,U.players_points);let b=c.players.map(e=>{var t;let r=E[e];if(!r)return null;let a=T[e]||0;return{id:e,name:r.full_name||"".concat(r.first_name," ").concat(r.last_name),position:r.position,team:r.team,jerseyNumber:r.number,status:{isActive:"Active"===r.status,gameStatus:r.injury_status||"playing",lastUpdated:new Date},injuryStatus:r.injury_status?{type:r.injury_status,description:r.injury_status,severity:"unknown",practiceStatus:"unknown"}:void 0,stats:{season:parseInt(k),week:v,fantasyPoints:a,projectedPoints:0,isStarter:(null==U||null==(t=U.starters)?void 0:t.includes(e))||!1}}}).filter(Boolean);return console.log("User Matchup Data:",{week:v,userPoints:null==U?void 0:U.points,opponentPoints:null==S?void 0:S.points,userMatchup:U,opponentMatchup:S}),{user:l,league:{id:w.league_id,name:w.name,size:w.total_rosters,scoringType:(null==(s=w.scoring_settings)?void 0:s.rec)?"PPR":"Standard",season:w.season},roster:{...c,teamName:y,players:b,rank:(null==(o=c.settings)?void 0:o.rank)||1,settings:c.settings},matchup:{...U,points:(null==U?void 0:U.points)||0,opponentName:N,opponentScore:(null==S?void 0:S.points)||0,opponentRosterId:null==S?void 0:S.roster_id,week:v},currentWeek:v,currentSeason:k}}async importUserTeams(e){let t=await this.getUser(e);if(!t)throw Error('User "'.concat(e,'" not found on Sleeper'));let r=await this.getUserLeagues(t.user_id),a=[];for(let t of r){let r=await this.getUserTeam(e,t.league_id);r&&a.push({platform:"Sleeper",leagueId:t.league_id,leagueName:t.name,teamName:r.roster.teamName,roster:r.roster,league:r.league,matchup:r.matchup})}return a}}}]);